plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
}

group = 'aws.learning'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	compile (
			'com.amazonaws.serverless:aws-serverless-java-container-springboot2:[1.0,)',
			'io.symphonia:lambda-logging:1.0.1'
	)
//	compile group: 'com.amazonaws.serverless', name: 'aws-serverless-java-container-spring', version: '1.5.1'
//	compile group: 'com.amazonaws.serverless', name: 'aws-serverless-java-container-springboot2', version: '1.0,'

//	compile group: 'com.amazonaws.serverless', name: 'aws-serverless-java-container-springboot2:[1.0,'

}

test {
	useJUnitPlatform()
}


task buildZip(type: Zip) {
	from compileJava
	from processResources
	into('lib') {
		from configurations.runtimeClasspath
	}
}